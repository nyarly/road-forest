Also: "blob" resource
Not yourself - simple file service
  allowed_methods - GET, HEAD
  post_is_create: default
  process_post: default
  content_types_accepted: defaults
Yourself - file transfer endpoint
  allowed_methods - GET, HEAD, POST, PUT, DELETE
  post_is_create: true
  process_post: default (unused)
  content_types_accepted: @model.update(params, blob) - update vs. create?

Other concerns:
Content type handling (iow: RDF<->text format)
Authentication
Authorization
Content encoding (gzip, compress)
Charsets
Languages
Exception handling

HTML related:
  Method coercion (POST that means DELETE/PUT)
  Params -> graph
  Form rendering

Cacheing - last_modified, expires, etag(+ W/)


Blending concern-focused modules
e.g. content_types_accepted - quality metrics, accept variants...
variance, conflict, options are related to the above (i.e. blended concerns)

test build_graph

test credence generations

property delete

property replace

repo autovacuum

collect vocabs used to generate a graph - build curies for representations that work that way
